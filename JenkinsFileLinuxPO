pipeline {
    agent any

    environment {

        // LINUX
        MAVEN_HOME = '/usr/share/maven'
        JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-amd64'


        // Define the GitHub repository URL as an environment variable
        GITHUB_URL = 'https://github.com/pedrojcoliveira/M1A_1240481_1240482.git'
        GITHUB_BRANCH = 'main'
        GITHUB_ID = 'githubaccesstoken'
        //SONAR_TOKEN = 'squ_758a463b9959b1f061c934189bfd0dc8871dccc8'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from your repository
                git url: "${GITHUB_URL}", branch: "${GITHUB_BRANCH}", credentialsId: "${GITHUB_ID}"
            }
        }




        stage('SonarQube') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    def sonarToken = credentials('jenkins_sonar')
                    sh "${MAVEN_HOME}/bin/mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar -Dsonar.host.url=http://192.168.1.176:9000 -Dsonar.login=${sonarToken}"

                }
            }
        }


        stage('Package') {
            steps {
                // Package the application
                sh "${MAVEN_HOME}/bin/mvn package"
            }
        }

        stage('Deploy') {
            steps {
                // Use the SSH key with the specified credentials ID (set on Jenkins)
                withCredentials([sshUserPrivateKey(credentialsId: 'MySSHKey', keyFileVariable: 'SSH_KEY')]) {

                    // Stop the old version of the application running on port 2226
                    sh """
                    ssh -i \$SSH_KEY -o StrictHostKeyChecking=no -p 11319 root@vsgate-ssh.dei.isep.ipp.pt '
                        # Find the PID of the process running on port 2226 and kill it
                        pid=\$(lsof -ti:2226)
                        if [ ! -z "\$pid" ]; then
                            echo "Killing process ID: \$pid on port 2226"
                            kill -9 \$pid
                        else
                            echo "No process found running on port 2226."
                        fi
                    '
                    """


                    // Create the destination directory if it doesn't exist
                    sh """
                    ssh -i \$SSH_KEY -o StrictHostKeyChecking=no -p 11319 root@vsgate-ssh.dei.isep.ipp.pt '
                        mkdir -p /usr/local/M1A_1240481_1240482
                    '
                    """

                    // Secure copy of the project
                    sh """
                    scp -i \$SSH_KEY -P 11319 target/psoft-g1-0.0.1-SNAPSHOT.jar root@vsgate-ssh.dei.isep.ipp.pt:/usr/local/M1A_1240481_1240482
                    """
                }
            }
        }
    }

}