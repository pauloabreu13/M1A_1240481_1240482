pipeline {
    agent any // Use any available agent for the pipeline

    environment {
        // Set environment variables for Maven and Java
        MAVEN_HOME = 'C:\\Dev\\apache-maven-3.9.9'
        JAVA_HOME = 'C:\\Program Files\\Java\\jdk-17'
        // Update the PATH environment variable to include Maven and Java binaries
        PATH = "${env.MAVEN_HOME}\\bin;${env.JAVA_HOME}\\bin;${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from the specified Git repository and branch
                git branch: 'main', url: 'https://github.com/pedrojcoliveira/M1A_1240481_1240482.git'
            }
        }
        stage('Clean') {
            steps {
                // Run the Maven clean command to clean the project
                bat "${MAVEN_HOME}\\bin\\mvn clean"
            }
        }
        stage('Validate') {
            steps {
                // Run the Maven validate command to validate the project
                bat "${MAVEN_HOME}\\bin\\mvn validate"
            }
        }
        stage('Compile') {
            steps {
                // Run the Maven compile command to compile the project
                bat "${MAVEN_HOME}\\bin\\mvn compile"
            }
        }

       stage('Unit Tests') {
            steps {
                bat "${MAVEN_HOME}\\bin\\mvn surefire:test"
            }
       }

        stage('Integration Tests') {
            steps {
                bat "${MAVEN_HOME}\\bin\\mvn failsafe:integration-test failsafe:verify"
            }
        }

        stage('Mutation Testing') {
            steps {
                // Run the PIT mutation testing tool to generate mutation test reports
                bat "${MAVEN_HOME}\\bin\\mvn org.pitest:pitest-maven:mutationCoverage"
            }
        }

        stage('Package') {
            steps {
                // Run the Maven package command to package the project
                bat "${MAVEN_HOME}\\bin\\mvn package"
            }
        }


        stage('SonarQube Analysis') {
                    steps {
                        withSonarQubeEnv('SonarQube') {
                            bat '''mvn sonar:sonar -Dsonar.projectKey=OdSoft -Dsonar.projectName='OdSoft' -Dsonar.host.url=http://localhost:9000'''
                            echo 'SonarQube Analysis Completed'
                        }
                    }
        }

        stage('Deploy') {
            steps {
                // Run the Maven deploy command to deploy the project and save to the target folder inside the project
                bat "${MAVEN_HOME}\\bin\\mvn deploy -DaltDeploymentRepository=local::default::file:${WORKSPACE}\\target"

            }
        }

      stage('Run Application') {
            steps {
                // Run the Java application using the compiled JAR file
                echo "Running the Java application..."
                bat "java -jar ${WORKSPACE}\\target\\psoft-g1-0.0.1-SNAPSHOT.jar --server.port=8081"
            }
        }

    }
}