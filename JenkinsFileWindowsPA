pipeline {
    agent any // Use any available agent for the pipeline

    environment {
        MAVEN_HOME = 'C:\\Dev\\apache-maven-3.9.9'
        JAVA_HOME = 'C:\\Java\\openlogic-openjdk-17.0.12+7-windows-x64'

        GITHUB_URL = 'https://github.com/pedrojcoliveira/M1A_1240481_1240482.git'
        GITHUB_BRANCH = 'main'
    }

    stages {

        stage('Checkout') {
            steps {
                git url: "${GITHUB_URL}", branch: "${GITHUB_BRANCH}"
            }
        }

        stage('Clean') {
            steps {
                // Run the Maven clean command to clean the project
                bat "${MAVEN_HOME}\\bin\\mvn clean"
            }
        }

        stage('Validate') {
            steps {
                // Run the Maven validate command to validate the project
                bat "${MAVEN_HOME}\\bin\\mvn validate"
            }
        }

        stage('Compile') {
            steps {
                // Run the Maven compile command to compile the project
                bat "${MAVEN_HOME}\\bin\\mvn compile"
            }
        }

        stage('Unit Tests') {
            steps {
                bat "${MAVEN_HOME}\\bin\\mvn surefire:test"
            }
        }

        stage('Integration Tests') {
            steps {
                bat "${MAVEN_HOME}\\bin\\mvn failsafe:integration-test failsafe:verify"
            }
        }

        stage('Mutation Testing') {
            steps {
                // Run the PIT mutation testing tool to generate mutation test reports
                bat "${MAVEN_HOME}\\bin\\mvn org.pitest:pitest-maven:mutationCoverage"
            }
        }

        stage('Package') {
            steps {
                // Run the Maven package command to package the project
                bat "${MAVEN_HOME}\\bin\\mvn package -DskipTests"
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    bat '''mvn sonar:sonar -Dsonar.projectKey=OdSoftProject -Dsonar.projectName='SonarQube' -Dsonar.host.url=http://localhost:9000'''
                    echo 'SonarQube Analysis Completed'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo '====== Starting Deploy Stage ======'
                    // Parar qualquer execução anterior do JAR usando Windows commands
                    bat '''
                        for /f "tokens=5" %%a in ('netstat -ano ^| find "8081"') do taskkill /F /PID %%a 2>NUL || exit /b 0
                        start /B java -jar target/psoft-g1-0.0.1-SNAPSHOT.jar --server.port=8081
                    '''
                    echo '====== Finished Deploy Stage ======'
                }
            }
        }
    }

    post {
        success {
            // Actions to take when the pipeline succeeds
            echo 'Pipeline completed successfully!'
        }
        failure {
            // Actions to take when the pipeline fails
            echo 'Pipeline failed!'
        }
    }
}